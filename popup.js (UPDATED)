const fileInput = document.getElementById('bgFile');
const preview = document.getElementById('preview');
const saveBtn = document.getElementById('saveBtn');

let imgDataUrl = '';

fileInput.addEventListener('change', () => {
  const file = fileInput.files[0];
  if (file) {
    const reader = new FileReader();
    reader.onload = (e) => {
      imgDataUrl = e.target.result;
      preview.src = imgDataUrl;
    };
    reader.readAsDataURL(file);
  }
});

saveBtn.addEventListener('click', () => {
  if (imgDataUrl) {
    chrome.storage.sync.set({ bgImage: imgDataUrl }, () => {
      alert('Background saved! Please reload Twitch.');
    });
  } else {
    alert('Please select an image first.');
  }
});

// Custom CSS save logic
const cssInput = document.getElementById('cssInput');
const saveCSSBtn = document.getElementById('saveCSS');

chrome.storage.sync.get(['customCSS'], (result) => {
  cssInput.value = result.customCSS || '';
});

saveCSSBtn.addEventListener('click', () => {
  chrome.storage.sync.set({ customCSS: cssInput.value }, () => {
    alert('Custom CSS saved! Reload Twitch.');
  });
});

const boostRange = document.getElementById('boostRange');
const applyBoost = document.getElementById('applyBoost');

applyBoost.addEventListener('click', () => {
  const boostFactor = parseFloat(boostRange.value);
  chrome.storage.sync.set({ boostFactor }, () => {
    alert('Boost level saved. Reload Twitch.');
  });
});


/* This popup script lets the user choose a background image and enter custom CSS to apply to Twitch. */
